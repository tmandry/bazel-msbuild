<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <ItemGroup Label="ProjectConfigurations">{project_configs}
  </ItemGroup>

{config_properties}

  <PropertyGroup Label="Globals">
    <ProjectName>{target.label.name}</ProjectName>
    <VCProjectVersion>16.0</VCProjectVersion>
    <ProjectGuid>{target.guid}</ProjectGuid>
    <Keyword>MakeFileProj</Keyword>
    <UseHostCompilerIfAvailable>false</UseHostCompilerIfAvailable>
    {nmake_output}
    <OutDir>{rel_paths.out}\$(BazelCfgDirname)\bin\{target.label.package_path}\</OutDir>
    {target_name_ext}
  </PropertyGroup>

  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />

  <PropertyGroup Label="Configuration">
    <ConfigurationType>Makefile</ConfigurationType>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Fastbuild'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Debug'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />

  <!-- Hack to get most includes working -->
  <PropertyGroup>
    <IncludePath>{rel_paths.workspace_root};$(IncludePath)</IncludePath>
  </PropertyGroup>

  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>

  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>

  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Platform)'=='Win32'">
    <NMakePreprocessorDefinitions>WIN32;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <NMakePreprocessorDefinitions>_DEBUG;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <NMakePreprocessorDefinitions>NDEBUG;$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
  </PropertyGroup>

  <PropertyGroup>
    <NMakePreprocessorDefinitions>{target.defines_joined};$(NMakePreprocessorDefinitions)</NMakePreprocessorDefinitions>
    <NMakeIncludeSearchPath>{include_dirs_joined};$(AdditionalIncludeDirectories)</NMakeIncludeSearchPath>
    <AdditionalOptions>{target.compile_flags_joined} %(AdditionalOptions)</AdditionalOptions>
  </PropertyGroup>

  {file_groups}

  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />

  <Target Name="Build">
    <Message Text="NMakePreprocessorDefinitions = $(NMakePreprocessorDefinitions)" />
    <Exec Command="&quot;{cfg.bazel_path}&quot; build $(BazelCfgOpts) {target.label.absolute}"
          Outputs="{outputs}"
          WorkingDirectory="{rel_paths.workspace_root}" />
  </Target>

  <Target Name="Clean">
    <Exec Command="&quot;{cfg.bazel_path}&quot; clean $(BazelCfgOpts)"
          WorkingDirectory="{rel_paths.workspace_root}" />
  </Target>

  <!-- Override PrepareForBuild so it doesn't try to create OutDir and interfere with bazel. -->
  <Target Name="PrepareForBuild" DependsOnTargets="$(PrepareForBuildDependsOn)"></Target>

  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>
